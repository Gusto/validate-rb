name: CI

on:
  pull_request:
    branches: [ main, alpha ]
    paths:
    - '**.rb'
    - '**.feature'
    - '.github/**'
    - 'docker'
    - 'Gemfile'
    - '*.gemspec'
  push:
    branches: [ main, alpha ]
    paths-ignore:
    - '**.md'

jobs:
  test:
    name: Ruby ${{ matrix.ruby }}, Run ${{ matrix.task }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby:
        - '2.6'
        - '2.7'
        task:
        - specs
        - features

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-ruby-${{ matrix.ruby }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-ruby-${{ matrix.ruby }}-gems-

    - name: Bundle
      run: |
        gem install bundler -v '2.1.4'
        bundle config path vendor/bundle
        bundle install

    - name: Run ${{ matrix.task }}
      run: bundle exec rake ${{ matrix.task }}

  release:
    name: "\U0001F4E4 Publish"
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/alpha') }}
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-2.6-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby-2.6-gems-

      - name: Bundle
        run: |
          gem install bundler -v '2.1.4'
          bundle config path vendor/bundle
          bundle install

      - name: Yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install

      - name: 'Release'
        env:
          GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release
